package first;

import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

import com.mpatric.mp3agic.InvalidDataException;
import com.mpatric.mp3agic.Mp3File;
import com.mpatric.mp3agic.UnsupportedTagException;

import javafx.application.Application;

import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;

import javafx.stage.FileChooser;
import javafx.stage.Stage;
import javafx.util.Duration;

public class Qwerty extends javafx.application.Application {

	private static MediaPlayer mediaPlayer;
	private static File file;
	private static final FileChooser fileChooser = new FileChooser();
	private static Long income = 0L;
	private static Scanner scan = new Scanner(System.in);
	private static int sec = 1;
	private static Long trackSize = 0L;
	private static List<File> files;

	public static void main(String[] args) {
		Application.launch(args);

	}

	private static void playMusic() {
		Media hit;
		for (int i = 0; i < files.) {
		hit = new Media(files.get(0).toURI().toString());
		mediaPlayer = new MediaPlayer(hit);
		}
		try {
			
			for(int i = 0; i < files.size();i++) {
				Mp3File mp3file = new Mp3File(files.get(i));
				trackSize += mp3file.getLengthInSeconds();
			}
			System.out.println("Length of this mp3 is: " + trackSize + " seconds");
		} catch (UnsupportedTagException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvalidDataException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		System.out.println("Track size " + trackSize + " Income " + income);
		if (trackSize <= income) {
			System.out.println("Do you want to choose one more?");
			scan.nextLine();
			String yesOrNo = scan.nextLine();
			if (yesOrNo.equalsIgnoreCase("y") || yesOrNo.equalsIgnoreCase("yes")) {
				System.out.println("\nPlease choose " + (income / 180) + " songs");
			}else {
				System.out.println("\nOkey song cycled");
			}
		} else if (trackSize > income) {
			System.out.println("Music play");
		}

		mediaPlayer.setStopTime(Duration.seconds(income));
		mediaPlayer.setAutoPlay(true);
		clock();
		
	}

	private static void alarm() {

		Media alarm = new Media(new File("Clock.mp3").toURI().toString());
		mediaPlayer = new MediaPlayer(alarm);
		System.out.println("Alarm!!!");

		mediaPlayer.play();
	}

	private static void clock() {

		Thread t = new Thread(new Runnable() {

			@Override
			public void run() {

				while (true) {

					if (sec == income) {
						mediaPlayer.stop();
						mediaPlayer = null;
						alarm();
						break;
					}

					System.out.println(sec);
					sec++;
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}

			}

		});
		t.start();
	}

	@Override
	public void start(Stage primaryStage) throws Exception {

		System.out.print("Enter time:");
		income = scan.nextLong();

		// file = fileChooser.showOpenDialog(primaryStage);
		files = fileChooser.showOpenMultipleDialog(primaryStage);
		System.out.println(files);

		playMusic();

	}

}
/*
 * 
 *
 * */
